{"id":1286411764,"question_id":30,"lang":"cpp","lang_name":"C++","time":"1 year, 1 month","timestamp":1718226872,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1286411764/","is_pending":"Not Pending","title":"Substring with Concatenation of All Words","memory":"N/A","code":"class Solution {\npublic:\n    vector<int> findSubstring(string s, vector<string>& words) {\n        vector<int> result;\n        if (s.empty() || words.empty() || words[0].empty()) {\n            return result;\n        }\n        \n        int word_len = words[0].length();\n        int total_len = word_len * words.size();\n        \n        // Early return if s is too short to contain the concatenation of words\n        if (s.length() < total_len) {\n            return result;\n        }\n        \n        // Create a frequency map for the words\n        unordered_map<string, int> word_count;\n        for (const auto& word : words) {\n            word_count[word]++;\n        }\n        \n        // Iterate over the string with a sliding window of size total_len\n        unordered_map<string, int> substring_word_count;\n        for (int i = 0; i <= s.length() - total_len; ++i) {\n            // Reset substring_word_count for the new window\n            if (i > 0) {\n                string prev_word = s.substr(i - 1, word_len);\n                substring_word_count[prev_word]--;\n                if (substring_word_count[prev_word] == 0) {\n                    substring_word_count.erase(prev_word);\n                }\n            }\n            \n            int j = 0;\n            // Check words in the current window\n            for (; j < words.size(); ++j) {\n                string word = s.substr(i + j * word_len, word_len);\n                if (word_count.find(word) == word_count.end()) {\n                    break;\n                }\n                substring_word_count[word]++;\n                if (substring_word_count[word] > word_count[word]) {\n                    break;\n                }\n            }\n            if (j == words.size()) {\n                result.push_back(i);\n            }\n        }\n        \n        return result;\n    }\n};","compare_result":"0100101101010001110000011000101011111110011111111011111011111101101111111111011111111111011111111111111111110111011101110101111111111111111111111111001111111111111111111111111101010","title_slug":"substring-with-concatenation-of-all-words","has_notes":false,"flag_type":1,"frontend_id":71}