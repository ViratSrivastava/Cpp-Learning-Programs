{"id":1286499083,"question_id":30,"lang":"cpp","lang_name":"C++","time":"1 year, 1 month","timestamp":1718239482,"status":10,"status_display":"Accepted","runtime":"31 ms","url":"/submissions/detail/1286499083/","is_pending":"Not Pending","title":"Substring with Concatenation of All Words","memory":"22.6 MB","code":"class Solution {\npublic:\n    vector<int> findSubstring(string s, vector<string>& words) {\n        vector<int> result;\n        if (s.empty() || words.empty() || words[0].empty()) {\n            return result;\n        }\n        \n        int word_len = words[0].length();\n        int total_len = word_len * words.size();\n        int s_len = s.length();\n        \n        if (s_len < total_len) {\n            return result;\n        }\n        \n        unordered_map<string, int> word_count;\n        for (const auto& word : words) {\n            word_count[word]++;\n        }\n        \n        for (int i = 0; i < word_len; ++i) {\n            unordered_map<string, int> current_count;\n            int start = i, count = 0;\n            \n            for (int j = i; j <= s_len - word_len; j += word_len) {\n                string word = s.substr(j, word_len);\n                \n                if (word_count.find(word) != word_count.end()) {\n                    current_count[word]++;\n                    count++;\n                    \n                    while (current_count[word] > word_count[word]) {\n                        string left_word = s.substr(start, word_len);\n                        current_count[left_word]--;\n                        count--;\n                        start += word_len;\n                    }\n                    \n                    if (count == words.size()) {\n                        result.push_back(start);\n                    }\n                } else {\n                    current_count.clear();\n                    count = 0;\n                    start = j + word_len;\n                }\n            }\n        }\n        \n        return result;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"substring-with-concatenation-of-all-words","has_notes":false,"flag_type":1,"frontend_id":73}