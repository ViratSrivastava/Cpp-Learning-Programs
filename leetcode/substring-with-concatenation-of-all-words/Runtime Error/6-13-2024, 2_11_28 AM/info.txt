{"id":1286393585,"question_id":30,"lang":"cpp","lang_name":"C++","time":"1 year, 1 month","timestamp":1718224888,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/1286393585/","is_pending":"Not Pending","title":"Substring with Concatenation of All Words","memory":"N/A","code":"class Solution {\npublic:\n    vector<int> findSubstring(string s, vector<string>& words) {\n        vector<int> result;\n        if (s.empty() || words.empty() || words[0].empty()) {\n            return result;\n        }\n        \n        int word_len = words[0].length();\n        int total_len = word_len * words.size();\n        \n        // Create a frequency map for the words\n        unordered_map<string, int> word_count;\n        for (const auto& word : words) {\n            word_count[word]++;\n        }\n        \n        // Iterate over the string with a sliding window of size total_len\n        for (int i = 0; i < word_len; ++i) {\n            unordered_map<string, int> substring_word_count;\n            int count = 0;\n            int start = i;\n            \n            // Move the window with a step of word_len\n            for (int j = i; j <= s.length() - word_len; j += word_len) {\n                string word = s.substr(j, word_len);\n                \n                // If word is not in words, reset the window\n                if (word_count.find(word) == word_count.end()) {\n                    substring_word_count.clear();\n                    count = 0;\n                    start = j + word_len;\n                    continue;\n                }\n                \n                substring_word_count[word]++;\n                count++;\n                \n                // If count of a word in substring exceeds count in words, move the window forward\n                while (substring_word_count[word] > word_count[word]) {\n                    substring_word_count[s.substr(start, word_len)]--;\n                    count--;\n                    start += word_len;\n                }\n                \n                // If count matches total words count, add start to result\n                if (count == words.size()) {\n                    result.push_back(start);\n                }\n            }\n        }\n        \n        return result;\n    }\n};","compare_result":"1111111111111111111111111111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"substring-with-concatenation-of-all-words","has_notes":false,"flag_type":1,"frontend_id":68}