{"id":1610582578,"question_id":950,"lang":"cpp","lang_name":"C++","time":"3Â months","timestamp":1744986223,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/1610582578/","is_pending":"Not Pending","title":"X of a Kind in a Deck of Cards","memory":"21.3 MB","code":"class Solution {\npublic:\n    int gcd(int a, int b) {\n        return b == 0 ? a : gcd(b, a % b);\n    }\n\n    bool hasGroupsSizeX(vector<int>& deck) {\n        sort(deck.begin(), deck.end());\n        int n = deck.size();\n        vector<int> freq;\n        int count = 1;\n        \n        // Traverse through the deck\n        for (int i = 0; i < n - 1; i++) {\n            // Count the frequency of each number\n            if (deck[i] == deck[i + 1]) {\n                count++;\n            } else {\n                freq.push_back(count);  // Add the count of the current number to freq\n                count = 1;  // Reset count for the next number\n            }\n        }\n        // Add the last frequency (after the last number in the deck)\n        freq.push_back(count);\n        \n        // Compute the GCD of all frequencies\n        int check = freq[0];\n        for (int i = 1; i < freq.size(); i++) {\n            check = gcd(check, freq[i]);\n        }\n        \n        return check >= 2;  // If GCD of frequencies is >= 2, return true\n    }\n};\n","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"x-of-a-kind-in-a-deck-of-cards","has_notes":false,"flag_type":1,"frontend_id":149}