{"id":1692347619,"question_id":328,"lang":"cpp","lang_name":"C++","time":"1Â week, 4Â days","timestamp":1752084957,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1692347619/","is_pending":"Not Pending","title":"Odd Even Linked List","memory":"15.5 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* oddEvenList(ListNode* head) {\n        if(head == nullptr) return head;\n        if(head->next == nullptr || head->next->next == nullptr) return head;\n        int count = 1;\n        ListNode* odd = head;\n        ListNode* even = head->next;\n        ListNode* evenListHead = even;\n        while(even && even->next){\n            odd->next = even->next;\n            odd = odd->next;\n            even->next = odd->next;\n            even = even -> next;\n        }\n        odd -> next = evenListHead;\n        return head;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"odd-even-linked-list","has_notes":null,"flag_type":1,"frontend_id":230}