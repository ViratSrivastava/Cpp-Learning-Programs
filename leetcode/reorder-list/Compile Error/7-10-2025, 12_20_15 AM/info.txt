{"id":1692386765,"question_id":143,"lang":"cpp","lang_name":"C++","time":"1 week, 4 days","timestamp":1752087015,"status":20,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/1692386765/","is_pending":"Not Pending","title":"Reorder List","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    void reorderList(ListNode* head) {\n        if(head == nullptr || head ->next == nullptr || head->next->next == nullptr) return head;\n        \n        ListNode* temp = head;\n        int count = 1;\n        int mid = 0;\n        while(temp){\n            count++;\n        }\n        if(count%2 == 1){\n            mid = (count/2) +1;\n        }\n        else{\n            mid = count/2;\n        }\n        while(temp){\n\n        }\n\n\n\n\n\n\n\n        int counterCountO = 1;\n        int counterCountE = count;\n        while(counterCountE > mid){\n            count = 1;\n            temp = head;\n            while(count <counterCountE){\n                temp = temp -> next;\n                count++;\n            }\n            reordered -> next = temp;\n            temp = head;\n            while(counterCountO < mid){\n                counterCountO += 2;\n                while(count <= countCount){\n                    temp = temp->next;\n                }\n                reordered -> next = temp;\n                break;\n            }\n        }\n        return head;\n    }\n};","compare_result":null,"title_slug":"reorder-list","has_notes":false,"flag_type":1,"frontend_id":231}