{"id":1292986270,"question_id":853,"lang":"cpp","lang_name":"C++","time":"1 year, 1 month","timestamp":1718760740,"status":10,"status_display":"Accepted","runtime":"43 ms","url":"/submissions/detail/1292986270/","is_pending":"Not Pending","title":"Most Profit Assigning Work","memory":"41.2 MB","code":"class Solution {\npublic:\n    int maxProfitAssignment(vector<int>& difficulty, vector<int>& profit, vector<int>& worker) {\n        vector<pair<int, int>> jobs;\n        int n = difficulty.size();\n        \n        // Create job pairs and sort them by difficulty\n        for (int i = 0; i < n; ++i) {\n            jobs.emplace_back(difficulty[i], profit[i]);\n        }\n        sort(jobs.begin(), jobs.end());\n        \n        // Sort the workers by their ability\n        sort(worker.begin(), worker.end());\n        \n        int maxProfit = 0, j = 0, best = 0;\n        for (int i = 0; i < worker.size(); ++i) {\n            // For each worker, find the best job they can do\n            while (j < n && jobs[j].first <= worker[i]) {\n                best = max(best, jobs[j].second);\n                ++j;\n            }\n            // Add the best profit they can achieve to the total profit\n            maxProfit += best;\n        }\n        \n        return maxProfit;\n    }   \n};","compare_result":"111111111111111111111111111111111111111111111111111111111","title_slug":"most-profit-assigning-work","has_notes":false,"flag_type":1,"frontend_id":79}