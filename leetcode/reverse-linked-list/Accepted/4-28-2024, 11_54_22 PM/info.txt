{"id":1244348503,"question_id":206,"lang":"cpp","lang_name":"C++","time":"1 year, 2 months","timestamp":1714328662,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/1244348503/","is_pending":"Not Pending","title":"Reverse Linked List","memory":"11.6 MB","code":"class Solution {\npublic:\n    ListNode* reverseList(ListNode* head) {\n        if (head == nullptr) {\n            return nullptr;\n        }\n        ListNode* prev = nullptr;\n        ListNode* current = head;\n        ListNode* next = nullptr;\n\n        while (current != nullptr){\n            next = current->next; // Save the next node\n            current->next = prev; // Reverse the current node's pointer\n            prev = current;       // Move prev pointer one step forward\n            current = next;       // Move current pointer one step forward\n        }\n        return prev; // prev now points to the last node of the original list, which becomes the head of the reversed list\n    }\n};","compare_result":"1111111111111111111111111111","title_slug":"reverse-linked-list","has_notes":false,"flag_type":1,"frontend_id":17}