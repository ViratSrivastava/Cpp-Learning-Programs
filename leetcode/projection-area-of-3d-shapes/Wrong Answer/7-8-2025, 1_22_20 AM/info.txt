{"id":1690022403,"question_id":919,"lang":"cpp","lang_name":"C++","time":"1 week, 6 days","timestamp":1751917940,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1690022403/","is_pending":"Not Pending","title":"Projection Area of 3D Shapes","memory":"N/A","code":"class Solution {\npublic:\n    int projectionArea(vector<vector<int>>& grid) {\n        //x-y\n        int topSum = 0;\n        for(int i = 0; i < grid.size(); i++){\n            for(int j = 0; j < grid[0].size(); j++){\n                if (grid[i][j] > 0) topSum++; \n            }\n        }\n        //x-z\n        int frontSum = 0;\n        int maxTow = 0;\n        for(int i = 0; i < grid.size(); i++){\n            int start = grid[i][0];\n            for(int j = 0; j < grid[0].size();j++){\n                maxTow = max(start, grid[i][j]);\n            }\n            frontSum += maxTow;\n        }\n\n        //z-y\n        int SideSum = 0;\n        maxTow = 0;\n        for(int j = 0; j < grid[0].size(); j++){\n            int start = grid[0][j];\n            for(int i = 0; i < grid.size();i++){\n                maxTow = max(start, grid[i][j]);\n            }\n            SideSum += maxTow;\n        }\n        \n        return SideSum + topSum + frontSum;\n    }\n};","compare_result":"111111111111111111110011100000000000000000000000000000000000000000000000000000000000000000","title_slug":"projection-area-of-3d-shapes","has_notes":false,"flag_type":1,"frontend_id":226}